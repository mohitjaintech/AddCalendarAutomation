[
  {
    "line": 1,
    "elements": [
      {
        "line": 4,
        "name": "CalendarAPI is available to set custom schedule with recurrences",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": []
      },
      {
        "start_timestamp": "2020-11-25T10:27:39.460Z",
        "line": 7,
        "name": "User should able to add Custom Schedule with Daily Recurrences",
        "description": "",
        "id": "add-calendar-schedule-with-all-custom-recurrences-type-like-daily---weekly---monthly---yearly;user-should-able-to-add-custom-schedule-with-daily-recurrences",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2665000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Set Daily Recurrence with User Provided Start Date , Ends on Never",
            "match": {
              "location": "stepDefinitions.CalendarSchedulesStepDefs.setDailyRecurrence(java.util.List\u003cjava.util.Map\u003cjava.lang.String, java.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "RuleName",
                  "StartDate",
                  "RepeatEvery",
                  "EndDate",
                  "NumOfOccurrences"
                ]
              },
              {
                "cells": [
                  "TestAutomation_DAILY",
                  "11/30/2020",
                  "1",
                  "Null",
                  "Null"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c400\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:156)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:156)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat stepDefinitions.CalendarSchedulesStepDefs.verifyScheduleIsSet(CalendarSchedulesStepDefs.java:124)\r\n\tat âœ½.Schedule must set in calendar for \"Daily\" with Start Date , Ends on Never(file:///D:/Mohit_Project/GoogleCalender_Schedule/src/test/resources/features/Add_Schedule_Recurrences_Automation_Scenarios.feature:11)\r\n",
              "duration": 42000000,
              "status": "failed"
            },
            "line": 11,
            "name": "Schedule must set in calendar for \"Daily\" with Start Date , Ends on Never",
            "match": {
              "arguments": [
                {
                  "val": "Daily",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.CalendarSchedulesStepDefs.verifyScheduleIsSet(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "CalendarAPI is available to set custom schedule with recurrences",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": []
      },
      {
        "start_timestamp": "2020-11-25T10:27:42.227Z",
        "line": 14,
        "name": "User should able to add Custom Schedule with Weekly Recurrences",
        "description": "",
        "id": "add-calendar-schedule-with-all-custom-recurrences-type-like-daily---weekly---monthly---yearly;user-should-able-to-add-custom-schedule-with-weekly-recurrences",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1278000000,
              "status": "passed"
            },
            "line": 15,
            "name": "Set Weekly Recurrence with User Provided Start Date , Ends on Never",
            "match": {
              "location": "stepDefinitions.CalendarSchedulesStepDefs.setWeeklyRecurrence(java.util.List\u003cjava.util.Map\u003cjava.lang.String, java.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "RuleName",
                  "StartDate",
                  "RepeatEvery",
                  "RepeatBy",
                  "EndDate",
                  "NumOfOccurrences"
                ]
              },
              {
                "cells": [
                  "TestAutomation_WEEKLY",
                  "11/30/2020",
                  "1",
                  "1,2",
                  "Null",
                  "Null"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c400\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat stepDefinitions.CalendarSchedulesStepDefs.verifyScheduleIsSet(CalendarSchedulesStepDefs.java:124)\r\n\tat âœ½.Schedule must set in calendar for \"Weekly\" with Start Date , Ends on Never(file:///D:/Mohit_Project/GoogleCalender_Schedule/src/test/resources/features/Add_Schedule_Recurrences_Automation_Scenarios.feature:18)\r\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 18,
            "name": "Schedule must set in calendar for \"Weekly\" with Start Date , Ends on Never",
            "match": {
              "arguments": [
                {
                  "val": "Weekly",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.CalendarSchedulesStepDefs.verifyScheduleIsSet(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "CalendarAPI is available to set custom schedule with recurrences",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": []
      },
      {
        "start_timestamp": "2020-11-25T10:27:43.508Z",
        "line": 21,
        "name": "User should able to add Custom Schedule with Monthly Recurrences",
        "description": "",
        "id": "add-calendar-schedule-with-all-custom-recurrences-type-like-daily---weekly---monthly---yearly;user-should-able-to-add-custom-schedule-with-monthly-recurrences",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1355000000,
              "status": "passed"
            },
            "line": 22,
            "name": "Set Monthly Recurrence with User Provided Start Date , Ends on Never",
            "match": {
              "location": "stepDefinitions.CalendarSchedulesStepDefs.setMonthlyRecurrence(java.util.List\u003cjava.util.Map\u003cjava.lang.String, java.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "RuleName",
                  "StartDate",
                  "RepeatEvery",
                  "RepeatBy",
                  "EndDate",
                  "NumOfOccurrences"
                ]
              },
              {
                "cells": [
                  "TestAutomation_MONTHLY",
                  "11/30/2020",
                  "1",
                  "20,21",
                  "Null",
                  "Null"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c400\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat stepDefinitions.CalendarSchedulesStepDefs.verifyScheduleIsSet(CalendarSchedulesStepDefs.java:124)\r\n\tat âœ½.Schedule must set in calendar for \"Monthly\" with Start Date , Ends on Never(file:///D:/Mohit_Project/GoogleCalender_Schedule/src/test/resources/features/Add_Schedule_Recurrences_Automation_Scenarios.feature:25)\r\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 25,
            "name": "Schedule must set in calendar for \"Monthly\" with Start Date , Ends on Never",
            "match": {
              "arguments": [
                {
                  "val": "Monthly",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.CalendarSchedulesStepDefs.verifyScheduleIsSet(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "CalendarAPI is available to set custom schedule with recurrences",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": []
      },
      {
        "start_timestamp": "2020-11-25T10:27:44.866Z",
        "line": 28,
        "name": "User should able to add Custom Schedule with Yearly Recurrences",
        "description": "",
        "id": "add-calendar-schedule-with-all-custom-recurrences-type-like-daily---weekly---monthly---yearly;user-should-able-to-add-custom-schedule-with-yearly-recurrences",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1340000000,
              "status": "passed"
            },
            "line": 29,
            "name": "Set Yearly Recurrence with User Provided Start Date , Ends on Never",
            "match": {
              "location": "stepDefinitions.CalendarSchedulesStepDefs.setYearlyRecurrence(java.util.List\u003cjava.util.Map\u003cjava.lang.String, java.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "RuleName",
                  "StartDate",
                  "RepeatEvery",
                  "RepeatBy",
                  "EndDate",
                  "NumOfOccurrences"
                ]
              },
              {
                "cells": [
                  "TestAutomation_YEARLY",
                  "11/30/2020",
                  "1",
                  "2",
                  "Null",
                  "Null"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c400\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat stepDefinitions.CalendarSchedulesStepDefs.verifyScheduleIsSet(CalendarSchedulesStepDefs.java:124)\r\n\tat âœ½.Schedule must set in calendar for \"Yearly\" with Start Date , Ends on Never(file:///D:/Mohit_Project/GoogleCalender_Schedule/src/test/resources/features/Add_Schedule_Recurrences_Automation_Scenarios.feature:32)\r\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 32,
            "name": "Schedule must set in calendar for \"Yearly\" with Start Date , Ends on Never",
            "match": {
              "arguments": [
                {
                  "val": "Yearly",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.CalendarSchedulesStepDefs.verifyScheduleIsSet(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Add Calendar Schedule with all custom recurrences type like Daily , Weekly , Monthly , Yearly",
    "description": "Description: The purpose of these Tests is to verify Schedules added with all recurrences type.",
    "id": "add-calendar-schedule-with-all-custom-recurrences-type-like-daily---weekly---monthly---yearly",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/Add_Schedule_Recurrences_Automation_Scenarios.feature",
    "tags": []
  }
]